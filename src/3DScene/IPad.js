/*
  Auto-generated by Spline
*/
import * as THREE from 'three'
import React, { Suspense, useEffect, useRef, useState } from 'react'
import { Canvas, useFrame } from '@react-three/fiber'
import { Html, Mask, Image, Environment, useGLTF, ContactShadows, OrbitControls } from '@react-three/drei'
import { a as three } from '@react-spring/three'
import { useSpring } from '@react-spring/core'


import useSpline from '@splinetool/r3f-spline'

const vec = new THREE.Vector3()


export default function Scene({ open, ...props }) {
  const group = useRef()
  const image = useRef()
  const { nodes, materials } = useSpline('/ipad.splinecode')

  useFrame((state) => {
    const t = state.clock.getElapsedTime()
    state.camera.position.lerp(vec.set(0, 0, open ? -20 : -32), 0.1)
    state.camera.lookAt(0, open ? 1.5 : 0, 0)
    // state.camera.position.lerp(vec.set(0, 0, open ? -20 : -32), 0.1)
    // state.camera.lookAt(0, open ? 1.5 : 0, 0)
    group.current.rotation.x = THREE.MathUtils.lerp(group.current.rotation.x, open ? Math.cos(t / 2) / 8 + 0.25 : 0, 0.1)
    group.current.rotation.y = THREE.MathUtils.lerp(group.current.rotation.y, open ? Math.sin(t / 4) / 4 : 0, 0.1)
    group.current.rotation.z = THREE.MathUtils.lerp(group.current.rotation.z, open ? Math.sin(t / 4) / 4 : 0, 0.1)
    group.current.position.y = THREE.MathUtils.lerp(group.current.position.y, open ? (-2 + Math.sin(t)) / 3 : -4.3, 0.1)
  })
  return (
    <group ref={group}  {...props} dispose={null}>
      <three.group name="ipad" position={[103.6, -29.38, -42.42]}
        rotation={[0, Math.PI / 6, open ? 0 : -Math.PI / 2]}>
        <mesh
          name="Ellipse 4"
          geometry={nodes['Ellipse 4'].geometry}
          material={materials['Ellipse 4 Material']}
          castShadow
          receiveShadow
          position={[-63.36, 30.72, -0.36]}
          rotation={[-Math.PI, -0.02, -Math.PI]}
        />
        <mesh
          name="Ellipse 5"
          geometry={nodes['Ellipse 5'].geometry}
          material={materials['Ellipse 5 Material']}
          castShadow
          receiveShadow
          position={[-57.47, 42.32, -0.46]}
          rotation={[-Math.PI, -0.02, -Math.PI]}
        />
        <mesh
          name="Ellipse 3"
          geometry={nodes['Ellipse 3'].geometry}
          material={materials['Ellipse 3 Material']}
          castShadow
          receiveShadow
          position={[-69.45, 42.32, -0.25]}
          rotation={[-Math.PI, -0.02, -Math.PI]}
        />
        <mesh
          name="Rectangle"
          geometry={nodes.Rectangle.geometry}
          material={materials['Rectangle Material']}
          castShadow
          receiveShadow
          position={[-64.54, 37.46, 2.28]}
          rotation={[-Math.PI, -0.02, -Math.PI]}
        />
        <mesh
          name="Rectangle 6"
          geometry={nodes['Rectangle 6'].geometry}
          material={materials['Rectangle 6 Material']}
          castShadow
          receiveShadow
          position={[-91.02, 41.36, 0.52]}
          rotation={[0, -1.55, Math.PI / 2]}
        />
        <mesh
          name="Rectangle 5"
          geometry={nodes['Rectangle 5'].geometry}
          material={materials['Rectangle 5 Material']}
          castShadow
          receiveShadow
          position={[-71.03, 56.49, 0.17]}
          rotation={[-Math.PI / 2, 0, 0.02]}
        />
        <mesh
          name="Rectangle 4"
          geometry={nodes['Rectangle 4'].geometry}
          material={materials['Rectangle 4 Material']}
          castShadow
          receiveShadow
          position={[-50.82, 56.49, -0.18]}
          rotation={[-Math.PI / 2, 0, 0.02]}
        />
        <mesh
          name="Ellipse 2"
          geometry={nodes['Ellipse 2'].geometry}
          material={materials['Ellipse 2 Material']}
          castShadow
          receiveShadow
          position={[-88.42, 0.49, 2.25]}
          rotation={[0, 0.02, 0]}
        />
        <mesh
          name="Ellipse 31"
          geometry={nodes['Ellipse 31'].geometry}
          material={materials['Ellipse 31 Material']}
          castShadow
          receiveShadow
          position={[87.91, 0.49, 1]}
          rotation={[0, 0.02, 0]}
          scale={0.83}
        />
        <mesh
          name="Ellipse"
          // geometry={nodes.Ellipse.geometry}
          material={materials['Ellipse Material']}
          castShadow
          receiveShadow
          position={[87.91, 0.49, 1.25]}
          rotation={[0, 0.02, 0]}
          scale={0.83}
        >
          <meshStandardMaterial color="#b8b8ff" />
        </mesh>
        <mesh
          name="Rectangle 2"
          geometry={nodes['Rectangle 2'].geometry}
          material={materials['Rectangle 2 Material']}
          castShadow
          receiveShadow
          position={[-0.81, -0.48, 1.11]}
          rotation={[0, 0.02, 0]}
        >
          <Image ref={image} rotation={[0, 0, 0]} position={[-1, 0, 2.5]} scale={[162, 114]} transparent={true} opacity={1} raycast={() => null} url={"/img/dashboard_v3.png"} />
        </mesh>
        {/* <mesh
          name="Rectangle1"
          geometry={nodes.Rectangle1.geometry}
          material={materials['Rectangle1 Material']}
          castShadow
          receiveShadow
          position={[-0.04, -0.48, -3.65]}
          rotation={[0, 0.02, 0]}
        ></mesh> */}
        <mesh
          name="Rectangle1"
          geometry={nodes.Rectangle1.geometry}
          castShadow
          receiveShadow
          position={[-0.04, -0.48, -3.65]}
          rotation={[0, 0.02, 0]}
        >
          <meshStandardMaterial color="#faf9f9" />
        </mesh>


      </three.group>
      <OrbitControls />
    </group>
  )
}
